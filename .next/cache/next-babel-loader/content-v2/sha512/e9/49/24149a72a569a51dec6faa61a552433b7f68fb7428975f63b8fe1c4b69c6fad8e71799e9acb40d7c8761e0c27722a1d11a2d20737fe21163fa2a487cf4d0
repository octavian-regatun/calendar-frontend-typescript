{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Octavian\\\\Desktop\\\\Dev\\\\planitly-frontend\\\\src\\\\pages\\\\login.tsx\";\nimport { GOOGLE_CLIENT_ID, PRIVACY_POLICY_URI, TERMS_OF_SERVICE_URI } from '@/lib/constants';\nimport { useAuthStore } from '@/lib/store';\nimport styles from '@/styles/login.module.css';\nimport { Paper } from '@material-ui/core';\nimport { useRouter } from 'next/router';\nimport GoogleLogin from 'react-google-login';\n\nconst LoginNextPage = () => {\n  const router = useRouter();\n\n  async function getUser() {\n    const {\n      data: user\n    } = await axios.get(`${BACKEND_URI}/users`);\n  }\n\n  async function setTokenInLocalStorage() {\n    try {\n      const {\n        data: token\n      } = await axios.post(`${BACKEND_URI}/auth/google`);\n      if (!token) router.push('/404');\n      const jwtPayload = jwt.decode(token);\n      axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n      localStorage.setItem('token', token);\n    } catch (error) {\n      console.log(error);\n      router.push('/404');\n    }\n  }\n\n  const loading = useAuthStore(state => state.auth.loading);\n  const setLoading = useAuthStore(state => state.setLoading);\n\n  async function googleSuccess() {\n    // await setTokenInLocalStorage();\n    setLoading(true);\n  }\n\n  function googleFailure() {\n    router.push('/login');\n  }\n\n  console.log(loading);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.root,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      width: \"300\",\n      src: \"/banner.svg\",\n      alt: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      className: styles.card,\n      elevation: 24,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"By logging in you accept our\", ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n          href: PRIVACY_POLICY_URI,\n          children: \"Privacy Policy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), \" and\", ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n          href: TERMS_OF_SERVICE_URI,\n          children: \"Terms of Service\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n        className: styles.googleButton,\n        buttonText: \"Sign in with Google\",\n        clientId: GOOGLE_CLIENT_ID,\n        onSuccess: googleSuccess,\n        onFailure: googleFailure,\n        responseType: \"id_token\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\nexport default LoginNextPage;","map":{"version":3,"sources":["C:/Users/Octavian/Desktop/Dev/planitly-frontend/src/pages/login.tsx"],"names":["GOOGLE_CLIENT_ID","PRIVACY_POLICY_URI","TERMS_OF_SERVICE_URI","useAuthStore","styles","Paper","useRouter","GoogleLogin","LoginNextPage","router","getUser","data","user","axios","get","BACKEND_URI","setTokenInLocalStorage","token","post","push","jwtPayload","jwt","decode","defaults","headers","common","Authorization","localStorage","setItem","error","console","log","loading","state","auth","setLoading","googleSuccess","googleFailure","root","card","googleButton"],"mappings":"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","sourcesContent":["import {\n  GOOGLE_CLIENT_ID,\n  PRIVACY_POLICY_URI,\n  TERMS_OF_SERVICE_URI,\n} from '@/lib/constants';\nimport { useAuthStore } from '@/lib/store';\nimport styles from '@/styles/login.module.css';\nimport { Paper } from '@material-ui/core';\nimport { useRouter } from 'next/router';\nimport GoogleLogin from 'react-google-login';\n\nconst LoginNextPage: React.FC = () => {\n  const router = useRouter();\n\n  async function getUser() {\n    const { data: user } = await axios.get(`${BACKEND_URI}/users`);\n  }\n\n  async function setTokenInLocalStorage() {\n    try {\n      const { data: token } = await axios.post<string>(\n        `${BACKEND_URI}/auth/google`,\n      );\n\n      if (!token) router.push('/404');\n\n      const jwtPayload = jwt.decode(token as string);\n\n      axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n\n      localStorage.setItem('token', token as string);\n    } catch (error) {\n      console.log(error);\n\n      router.push('/404');\n    }\n  }\n\n  const loading = useAuthStore(state => state.auth.loading);\n  const setLoading = useAuthStore(state => state.setLoading);\n\n  async function googleSuccess(): Promise<void> {\n    // await setTokenInLocalStorage();\n\n    setLoading(true);\n  }\n\n  function googleFailure(): void {\n    router.push('/login');\n  }\n\n  console.log(loading);\n\n  return (\n    <div className={styles.root}>\n      <img width=\"300\" src=\"/banner.svg\" alt=\"logo\" />\n      <Paper className={styles.card} elevation={24}>\n        <h1>Welcome</h1>\n        <h4>\n          By logging in you accept our{' '}\n          <a href={PRIVACY_POLICY_URI}>Privacy Policy</a> and{' '}\n          <a href={TERMS_OF_SERVICE_URI}>Terms of Service</a>.\n        </h4>\n        <GoogleLogin\n          className={styles.googleButton}\n          buttonText=\"Sign in with Google\"\n          clientId={GOOGLE_CLIENT_ID}\n          onSuccess={googleSuccess}\n          onFailure={googleFailure}\n          responseType=\"id_token\"\n        />\n      </Paper>\n    </div>\n  );\n};\n\nexport default LoginNextPage;\n"]},"metadata":{},"sourceType":"module"}