{"ast":null,"code":"const Auth = ({\n  children\n}) => {\n  // const updateUser = useUserState(state => state.updateUser);\n  // const user = useUserState(state => state.user);\n  // useEffect(() => {\n  //   (async () => {\n  //     if (isTokenInLocalStorage()) {\n  //       const jwt = getJwtPayloadFromToken() as JwtPayload;\n  //       if (!isJwtExpired(jwt)) {\n  //         const token = localStorage.getItem('token') as string;\n  //         axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  //         await updateUser();\n  //       }\n  //     }\n  //   })();\n  // }, []);\n  console.log(user);\n  return children;\n};\n\nexport default Auth;","map":{"version":3,"sources":["C:/Users/Octavian/Desktop/Dev/planitly-frontend/src/components/Auth.tsx"],"names":["Auth","children","console","log","user"],"mappings":"AAcA,MAAMA,IAAqB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC9C;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AAEA,SAAOH,QAAP;AACD,CAtBD;;AAwBA,eAAeD,IAAf","sourcesContent":["import JwtPayload from '@/interfaces/jwtPayload';\nimport {\n  getJwtPayloadFromToken,\n  isJwtExpired,\n  isTokenInLocalStorage,\n} from '@/lib/jwt';\nimport { useUserState } from '@/lib/store';\nimport axios from 'axios';\nimport { useEffect } from 'react';\n\ninterface Props {\n  children: JSX.Element;\n}\n\nconst Auth: React.FC<Props> = ({ children }) => {\n  // const updateUser = useUserState(state => state.updateUser);\n  // const user = useUserState(state => state.user);\n\n  // useEffect(() => {\n  //   (async () => {\n  //     if (isTokenInLocalStorage()) {\n  //       const jwt = getJwtPayloadFromToken() as JwtPayload;\n  //       if (!isJwtExpired(jwt)) {\n  //         const token = localStorage.getItem('token') as string;\n\n  //         axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n\n  //         await updateUser();\n  //       }\n  //     }\n  //   })();\n  // }, []);\n\n  console.log(user);\n\n  return children;\n};\n\nexport default Auth;\n"]},"metadata":{},"sourceType":"module"}