{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Octavian/Desktop/Dev/planitly-frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Octavian/Desktop/Dev/planitly-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport jwtDecode from 'jwt-decode';\nimport { BACKEND_URI } from './constants';\nimport { redirectToError } from './redirect';\nimport { useUserState } from './store';\nexport function isJwtExpired(jwt) {\n  var now = Date.now().valueOf() / 1000;\n\n  if (typeof jwt.exp !== 'undefined' && jwt.exp < now) {\n    return true;\n  }\n\n  return false;\n}\nexport function setTokenInLocalStorage(_x) {\n  return _setTokenInLocalStorage.apply(this, arguments);\n}\n\nfunction _setTokenInLocalStorage() {\n  _setTokenInLocalStorage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(googleTokenId) {\n    var _yield$axios$post, token, jwtPayload;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return axios.post(\"\".concat(BACKEND_URI, \"/auth/google\"), {\n              tokenId: googleTokenId\n            });\n\n          case 3:\n            _yield$axios$post = _context.sent;\n            token = _yield$axios$post.data;\n            jwtPayload = jwtDecode(token);\n            console.log(jwtPayload);\n            axios.defaults.headers.common.Authorization = \"Bearer \".concat(token);\n            localStorage.setItem('token', token);\n            _context.next = 11;\n            return useUserState.getState().getUser();\n\n          case 11:\n            console.log(useUserState.getState().user);\n            _context.next = 18;\n            break;\n\n          case 14:\n            _context.prev = 14;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n            redirectToError('setTokenInLocalStorage error');\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 14]]);\n  }));\n  return _setTokenInLocalStorage.apply(this, arguments);\n}","map":{"version":3,"sources":["C:/Users/Octavian/Desktop/Dev/planitly-frontend/src/lib/jwt.ts"],"names":["axios","jwtDecode","BACKEND_URI","redirectToError","useUserState","isJwtExpired","jwt","now","Date","valueOf","exp","setTokenInLocalStorage","googleTokenId","post","tokenId","token","data","jwtPayload","console","log","defaults","headers","common","Authorization","localStorage","setItem","getState","getUser","user"],"mappings":";;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,eAAT,QAAgC,YAAhC;AACA,SAASC,YAAT,QAA6B,SAA7B;AAEA,OAAO,SAASC,YAAT,CAAsBC,GAAtB,EAAgD;AACrD,MAAMC,GAAG,GAAGC,IAAI,CAACD,GAAL,GAAWE,OAAX,KAAuB,IAAnC;;AAEA,MAAI,OAAOH,GAAG,CAACI,GAAX,KAAmB,WAAnB,IAAkCJ,GAAG,CAACI,GAAJ,GAAUH,GAAhD,EAAqD;AACnD,WAAO,IAAP;AACD;;AAED,SAAO,KAAP;AACD;AAED,gBAAsBI,sBAAtB;AAAA;AAAA;;;qFAAO,iBACLC,aADK;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAI2BZ,KAAK,CAACa,IAAN,WACzBX,WADyB,mBAE5B;AAAEY,cAAAA,OAAO,EAAEF;AAAX,aAF4B,CAJ3B;;AAAA;AAAA;AAIWG,YAAAA,KAJX,qBAIKC,IAJL;AASGC,YAAAA,UATH,GASgBhB,SAAS,CAAac,KAAb,CATzB;AAWHG,YAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AAEAjB,YAAAA,KAAK,CAACoB,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8BC,aAA9B,oBAAwDR,KAAxD;AAEAS,YAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BV,KAA9B;AAfG;AAAA,mBAiBGX,YAAY,CAACsB,QAAb,GAAwBC,OAAxB,EAjBH;;AAAA;AAmBHT,YAAAA,OAAO,CAACC,GAAR,CAAYf,YAAY,CAACsB,QAAb,GAAwBE,IAApC;AAnBG;AAAA;;AAAA;AAAA;AAAA;AAqBHV,YAAAA,OAAO,CAACC,GAAR;AAEAhB,YAAAA,eAAe,CAAC,8BAAD,CAAf;;AAvBG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import JwtPayload from '@/interfaces/jwtPayload';\nimport axios from 'axios';\nimport jwtDecode from 'jwt-decode';\nimport { BACKEND_URI } from './constants';\nimport { redirectToError } from './redirect';\nimport { useUserState } from './store';\n\nexport function isJwtExpired(jwt: JwtPayload): boolean {\n  const now = Date.now().valueOf() / 1000;\n\n  if (typeof jwt.exp !== 'undefined' && jwt.exp < now) {\n    return true;\n  }\n\n  return false;\n}\n\nexport async function setTokenInLocalStorage(\n  googleTokenId: string,\n): Promise<void> {\n  try {\n    const { data: token } = await axios.post<string>(\n      `${BACKEND_URI}/auth/google`,\n      { tokenId: googleTokenId },\n    );\n\n    const jwtPayload = jwtDecode<JwtPayload>(token);\n\n    console.log(jwtPayload);\n\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n\n    localStorage.setItem('token', token as string);\n\n    await useUserState.getState().getUser();\n\n    console.log(useUserState.getState().user);\n  } catch (error) {\n    console.log(error);\n\n    redirectToError('setTokenInLocalStorage error');\n  }\n}\n"]},"metadata":{},"sourceType":"module"}