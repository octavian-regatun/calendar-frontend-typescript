{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/Users/Octavian/Desktop/Dev/planitly-frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Octavian/Desktop/Dev/planitly-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Octavian\\\\Desktop\\\\Dev\\\\planitly-frontend\\\\src\\\\components\\\\Auth.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { getJwtPayloadFromToken, isJwtExpired, isTokenInLocalStorage } from '@/lib/jwt';\nimport { useUserState } from '@/lib/store';\nimport { useEffect } from 'react';\n\nvar Auth = function Auth() {\n  _s();\n\n  var updateUser = useUserState(function (state) {\n    return state.updateUser;\n  });\n  var user = useUserState(function (state) {\n    return state.user;\n  });\n  useEffect(function () {\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var jwt, token;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!isTokenInLocalStorage()) {\n                _context.next = 7;\n                break;\n              }\n\n              jwt = getJwtPayloadFromToken();\n\n              if (isJwtExpired(jwt)) {\n                _context.next = 7;\n                break;\n              }\n\n              token = localStorage.getItem('token');\n              axios.defaults.headers.common.Authorization = \"Bearer \".concat(token);\n              _context.next = 7;\n              return updateUser();\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  }, []);\n  console.log(user);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(Auth, \"JmR1gWaC7NM9wUUGlHSO0fTMT5Q=\", false, function () {\n  return [useUserState, useUserState];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["C:/Users/Octavian/Desktop/Dev/planitly-frontend/src/components/Auth.tsx"],"names":["getJwtPayloadFromToken","isJwtExpired","isTokenInLocalStorage","useUserState","useEffect","Auth","updateUser","state","user","jwt","token","localStorage","getItem","axios","defaults","headers","common","Authorization","console","log"],"mappings":";;;;;;;;AACA,SACEA,sBADF,EAEEC,YAFF,EAGEC,qBAHF,QAIO,WAJP;AAKA,SAASC,YAAT,QAA6B,aAA7B;AACA,SAASC,SAAT,QAA0B,OAA1B;;AAEA,IAAMC,IAAc,GAAG,SAAjBA,IAAiB,GAAM;AAAA;;AAC3B,MAAMC,UAAU,GAAGH,YAAY,CAAC,UAAAI,KAAK;AAAA,WAAIA,KAAK,CAACD,UAAV;AAAA,GAAN,CAA/B;AACA,MAAME,IAAI,GAAGL,YAAY,CAAC,UAAAI,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAN,CAAzB;AAEAJ,EAAAA,SAAS,CAAC,YAAM;AACd,6DAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACKF,qBAAqB,EAD1B;AAAA;AAAA;AAAA;;AAESO,cAAAA,GAFT,GAEeT,sBAAsB,EAFrC;;AAAA,kBAGQC,YAAY,CAACQ,GAAD,CAHpB;AAAA;AAAA;AAAA;;AAIWC,cAAAA,KAJX,GAImBC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAJnB;AAMKC,cAAAA,KAAK,CAACC,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8BC,aAA9B,oBAAwDP,KAAxD;AANL;AAAA,qBAQWJ,UAAU,EARrB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAYD,GAbQ,EAaN,EAbM,CAAT;AAeAY,EAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;AAEA,sBAAO;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CAtBD;;GAAMH,I;UACeF,Y,EACNA,Y;;;KAFTE,I;AAwBN,eAAeA,IAAf","sourcesContent":["import JwtPayload from '@/interfaces/jwtPayload';\nimport {\n  getJwtPayloadFromToken,\n  isJwtExpired,\n  isTokenInLocalStorage,\n} from '@/lib/jwt';\nimport { useUserState } from '@/lib/store';\nimport { useEffect } from 'react';\n\nconst Auth: React.FC = () => {\n  const updateUser = useUserState(state => state.updateUser);\n  const user = useUserState(state => state.user);\n\n  useEffect(() => {\n    (async () => {\n      if (isTokenInLocalStorage()) {\n        const jwt = getJwtPayloadFromToken() as JwtPayload;\n        if (!isJwtExpired(jwt)) {\n          const token = localStorage.getItem('token') as string;\n\n          axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n\n          await updateUser();\n        }\n      }\n    })();\n  }, []);\n\n  console.log(user);\n\n  return <div></div>;\n};\n\nexport default Auth;\n"]},"metadata":{},"sourceType":"module"}