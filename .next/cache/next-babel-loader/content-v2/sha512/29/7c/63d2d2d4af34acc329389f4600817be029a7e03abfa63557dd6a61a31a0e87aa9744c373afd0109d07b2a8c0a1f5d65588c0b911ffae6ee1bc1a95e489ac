{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Octavian/Desktop/Dev/planitly-frontend/node_modules/@babel/runtime/regenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"C:/Users/Octavian/Desktop/Dev/planitly-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Octavian\\\\Desktop\\\\Dev\\\\planitly-frontend\\\\src\\\\pages\\\\login.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { BACKEND_URI, GOOGLE_CLIENT_ID, PRIVACY_POLICY_URI, TERMS_OF_SERVICE_URI } from '@/lib/constants';\nimport GoogleLogin from 'react-google-login';\nimport { useRouter } from 'next/router';\nimport styles from '@/styles/login.module.css';\nimport { Paper } from '@material-ui/core';\nimport axios from 'axios';\n\nvar login = function login() {\n  _s();\n\n  var router = useRouter();\n\n  function getToken() {\n    return _getToken.apply(this, arguments);\n  }\n\n  function _getToken() {\n    _getToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$axios$post, token;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios.post(\"\".concat(BACKEND_URI, \"/auth/google\"));\n\n            case 3:\n              _yield$axios$post = _context.sent;\n              token = _yield$axios$post.data;\n              return _context.abrupt(\"return\", token);\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              return _context.abrupt(\"return\", undefined);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 8]]);\n    }));\n    return _getToken.apply(this, arguments);\n  }\n\n  function googleSuccess() {}\n\n  function googleFailure() {\n    router.push('/login');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.root,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      width: \"300\",\n      src: \"/banner.svg\",\n      alt: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Paper, {\n      className: styles.card,\n      elevation: 24,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"By logging in you accept our\", ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n          href: PRIVACY_POLICY_URI,\n          children: \"Privacy Policy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, _this), \" and\", ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n          href: TERMS_OF_SERVICE_URI,\n          children: \"Terms of Service\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, _this), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n        className: styles.googleButton,\n        buttonText: \"Sign in with Google\",\n        clientId: GOOGLE_CLIENT_ID,\n        onSuccess: googleSuccess,\n        onFailure: googleFailure,\n        responseType: \"id_token\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(login, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\nexport default login;","map":{"version":3,"sources":["C:/Users/Octavian/Desktop/Dev/planitly-frontend/src/pages/login.tsx"],"names":["BACKEND_URI","GOOGLE_CLIENT_ID","PRIVACY_POLICY_URI","TERMS_OF_SERVICE_URI","GoogleLogin","useRouter","styles","Paper","axios","login","router","getToken","post","token","data","undefined","googleSuccess","googleFailure","push","root","card","googleButton"],"mappings":";;;;;;;;AAAA,SACEA,WADF,EAEEC,gBAFF,EAGEC,kBAHF,EAIEC,oBAJF,QAKO,iBALP;AAMA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,SAASC,KAAT,QAAsB,mBAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA;;AAClB,MAAMC,MAAM,GAAGL,SAAS,EAAxB;;AADkB,WAGHM,QAHG;AAAA;AAAA;;AAAA;AAAA,yEAGlB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEkCH,KAAK,CAACI,IAAN,WACzBZ,WADyB,kBAFlC;;AAAA;AAAA;AAEkBa,cAAAA,KAFlB,qBAEYC,IAFZ;AAAA,+CAMWD,KANX;;AAAA;AAAA;AAAA;AAAA,+CAQWE,SARX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAHkB;AAAA;AAAA;;AAelB,WAASC,aAAT,GAAyB,CAGxB;;AAED,WAASC,aAAT,GAAyB;AACvBP,IAAAA,MAAM,CAACQ,IAAP,CAAY,QAAZ;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAEZ,MAAM,CAACa,IAAvB;AAAA,4BACE;AAAK,MAAA,KAAK,EAAC,KAAX;AAAiB,MAAA,GAAG,EAAC,aAArB;AAAmC,MAAA,GAAG,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,QAAC,KAAD;AAAO,MAAA,SAAS,EAAEb,MAAM,CAACc,IAAzB;AAA+B,MAAA,SAAS,EAAE,EAA1C;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAA,mDAC+B,GAD/B,eAEE;AAAG,UAAA,IAAI,EAAElB,kBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,UAEsD,GAFtD,eAGE;AAAG,UAAA,IAAI,EAAEC,oBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,eAOE,QAAC,WAAD;AACE,QAAA,SAAS,EAAEG,MAAM,CAACe,YADpB;AAEE,QAAA,UAAU,EAAC,qBAFb;AAGE,QAAA,QAAQ,EAAEpB,gBAHZ;AAIE,QAAA,SAAS,EAAEe,aAJb;AAKE,QAAA,SAAS,EAAEC,aALb;AAME,QAAA,YAAY,EAAC;AANf;AAAA;AAAA;AAAA;AAAA,eAPF;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAqBD,CA7CD;;GAAMR,K;UACWJ,S;;;AA8CjB,eAAeI,KAAf","sourcesContent":["import {\n  BACKEND_URI,\n  GOOGLE_CLIENT_ID,\n  PRIVACY_POLICY_URI,\n  TERMS_OF_SERVICE_URI,\n} from '@/lib/constants';\nimport GoogleLogin from 'react-google-login';\nimport { useRouter } from 'next/router';\nimport styles from '@/styles/login.module.css';\nimport { Paper } from '@material-ui/core';\nimport axios from 'axios';\n\nconst login = () => {\n  const router = useRouter();\n\n  async function getToken() {\n    try {\n      const { data: token } = await axios.post<string>(\n        `${BACKEND_URI}/auth/google`,\n      );\n\n      return token;\n    } catch (error) {\n      return undefined;\n    }\n  }\n\n  function googleSuccess() {\n\n\n  }\n\n  function googleFailure() {\n    router.push('/login');\n  }\n\n  return (\n    <div className={styles.root}>\n      <img width=\"300\" src=\"/banner.svg\" alt=\"logo\" />\n      <Paper className={styles.card} elevation={24}>\n        <h1>Welcome</h1>\n        <h4>\n          By logging in you accept our{' '}\n          <a href={PRIVACY_POLICY_URI}>Privacy Policy</a> and{' '}\n          <a href={TERMS_OF_SERVICE_URI}>Terms of Service</a>.\n        </h4>\n        <GoogleLogin\n          className={styles.googleButton}\n          buttonText=\"Sign in with Google\"\n          clientId={GOOGLE_CLIENT_ID}\n          onSuccess={googleSuccess}\n          onFailure={googleFailure}\n          responseType=\"id_token\"\n        />\n      </Paper>\n    </div>\n  );\n};\n\nexport default login;\n"]},"metadata":{},"sourceType":"module"}