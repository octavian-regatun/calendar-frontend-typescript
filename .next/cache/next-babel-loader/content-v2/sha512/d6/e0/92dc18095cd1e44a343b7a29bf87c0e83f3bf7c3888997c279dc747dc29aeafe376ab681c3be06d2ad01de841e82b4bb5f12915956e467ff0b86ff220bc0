{"ast":null,"code":"import { getJwtPayloadFromToken, isJwtExpired, isTokenInLocalStorage } from '@/lib/jwt';\nimport { useUserState } from '@/lib/store';\nimport axios from 'axios';\nimport { useEffect } from 'react';\nconst initiated = false;\n\nconst Auth = ({\n  children\n}) => {\n  const updateUser = useUserState(state => state.updateUser);\n  const user = useUserState(state => state.user);\n  useEffect(() => {\n    (async () => {\n      if (isTokenInLocalStorage()) {\n        const jwt = getJwtPayloadFromToken();\n\n        if (!isJwtExpired(jwt)) {\n          const token = localStorage.getItem('token');\n          axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n          await updateUser();\n        }\n      }\n    })();\n  }, []);\n  console.log(user);\n  return children;\n};\n\nexport default Auth;","map":{"version":3,"sources":["C:/Users/Octavian/Desktop/Dev/planitly-frontend/src/components/Auth.tsx"],"names":["getJwtPayloadFromToken","isJwtExpired","isTokenInLocalStorage","useUserState","axios","useEffect","initiated","Auth","children","updateUser","state","user","jwt","token","localStorage","getItem","defaults","headers","common","Authorization","console","log"],"mappings":"AACA,SACEA,sBADF,EAEEC,YAFF,EAGEC,qBAHF,QAIO,WAJP;AAKA,SAASC,YAAT,QAA6B,aAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AAKA,MAAMC,SAAS,GAAG,KAAlB;;AAEA,MAAMC,IAAqB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC9C,QAAMC,UAAU,GAAGN,YAAY,CAACO,KAAK,IAAIA,KAAK,CAACD,UAAhB,CAA/B;AACA,QAAME,IAAI,GAAGR,YAAY,CAACO,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAAzB;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACd,KAAC,YAAY;AACX,UAAIH,qBAAqB,EAAzB,EAA6B;AAC3B,cAAMU,GAAG,GAAGZ,sBAAsB,EAAlC;;AACA,YAAI,CAACC,YAAY,CAACW,GAAD,CAAjB,EAAwB;AACtB,gBAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AAEAX,UAAAA,KAAK,CAACY,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8BC,aAA9B,GAA+C,UAASN,KAAM,EAA9D;AAEA,gBAAMJ,UAAU,EAAhB;AACD;AACF;AACF,KAXD;AAYD,GAbQ,EAaN,EAbM,CAAT;AAeAW,EAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AAEA,SAAOH,QAAP;AACD,CAtBD;;AAwBA,eAAeD,IAAf","sourcesContent":["import JwtPayload from '@/interfaces/jwtPayload';\nimport {\n  getJwtPayloadFromToken,\n  isJwtExpired,\n  isTokenInLocalStorage,\n} from '@/lib/jwt';\nimport { useUserState } from '@/lib/store';\nimport axios from 'axios';\nimport { useEffect } from 'react';\n\ninterface Props {\n  children: JSX.Element;\n}\nconst initiated = false;\n\nconst Auth: React.FC<Props> = ({ children }) => {\n  const updateUser = useUserState(state => state.updateUser);\n  const user = useUserState(state => state.user);\n\n  useEffect(() => {\n    (async () => {\n      if (isTokenInLocalStorage()) {\n        const jwt = getJwtPayloadFromToken() as JwtPayload;\n        if (!isJwtExpired(jwt)) {\n          const token = localStorage.getItem('token') as string;\n\n          axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n\n          await updateUser();\n        }\n      }\n    })();\n  }, []);\n\n  console.log(user);\n\n  return children;\n};\n\nexport default Auth;\n"]},"metadata":{},"sourceType":"module"}